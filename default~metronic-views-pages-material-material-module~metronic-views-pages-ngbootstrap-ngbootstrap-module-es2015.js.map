{"version":3,"sources":["./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js","./node_modules/ngx-window-token/fesm2015/ngx-window-token.js","./src/metronic/views/partials/content/general/material-preview/material-preview.component.html","./src/metronic/views/partials/content/general/material-preview/material-preview.component.scss","./src/metronic/views/partials/content/general/material-preview/material-preview.component.ts","./src/metronic/views/partials/content/general/material-preview/material-preview.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACX;AAC0B;AAC6H;;AAEtL;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,UAAU,qBAAqB;AACrD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,uDAAM,IAAI;AACzF;AACA,sDAAsD,sEAAgB,EAAE,+CAA+C,6BAA6B,4DAAM,CAAC,wDAAQ,GAAG,4DAAM,CAAC,uDAAM,MAAM,EAAE,+CAA+C;;AAE1O;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,uDAAS;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,OAAO,mDAAK,2BAA2B;AACxD,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,mBAAmB,OAAO,oDAAM,EAAE;AAClC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,eAAe,OAAO,0DAAY,uCAAuC;AACz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","file":"default~metronic-views-pages-material-material-module~metronic-views-pages-ngbootstrap-ngbootstrap-module-es2015.js","sourcesContent":["import { WINDOW } from 'ngx-window-token';\nimport { Subject } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Inject, Injectable, Optional, Directive, EventEmitter, HostListener, Input, Output, TemplateRef, ViewContainerRef, NgModule, defineInjectable, inject } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n// The following code is heavily copy from https://github.com/zenorocha/clipboard.js\r\nclass ClipboardService {\r\n    /**\r\n     * @param {?} document\r\n     * @param {?} window\r\n     */\r\n    constructor(document, window) {\r\n        this.document = document;\r\n        this.window = window;\r\n        this.config = {};\r\n        this.copySubject = new Subject();\r\n        this.copyResponse$ = this.copySubject.asObservable();\r\n    }\r\n    /**\r\n     * @param {?} config\r\n     * @return {?}\r\n     */\r\n    configure(config) {\r\n        this.config = config;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    get isSupported() {\r\n        return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy') && !!this.window;\r\n    }\r\n    /**\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    isTargetValid(element) {\r\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\r\n            if (element.hasAttribute('disabled')) {\r\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\r\n            }\r\n            return true;\r\n        }\r\n        throw new Error('Target should be input or textarea');\r\n    }\r\n    /**\r\n     * copyFromInputElement\r\n     * @param {?} targetElm\r\n     * @return {?}\r\n     */\r\n    copyFromInputElement(targetElm) {\r\n        try {\r\n            this.selectTarget(targetElm);\r\n            /** @type {?} */\r\n            const re = this.copyText();\r\n            this.clearSelection(targetElm, this.window);\r\n            return re && this.isCopySuccessInIE11();\r\n        }\r\n        catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    // this is for IE11 return true even if copy fail\r\n    /**\r\n     * @return {?}\r\n     */\r\n    isCopySuccessInIE11() {\r\n        /** @type {?} */\r\n        const clipboardData = this.window['clipboardData'];\r\n        if (clipboardData && clipboardData.getData) {\r\n            if (!clipboardData.getData('Text')) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Creates a fake textarea element, sets its value from `text` property,\r\n     * and makes a selection on it.\r\n     * @param {?} content\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    copyFromContent(content, container = this.document.body) {\r\n        // check if the temp textarea still belongs to the current container.\r\n        // In case we have multiple places using ngx-clipboard, one is in a modal using container but the other one is not.\r\n        if (this.tempTextArea && !container.contains(this.tempTextArea)) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        if (!this.tempTextArea) {\r\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\r\n            try {\r\n                container.appendChild(this.tempTextArea);\r\n            }\r\n            catch (error) {\r\n                throw new Error('Container should be a Dom element');\r\n            }\r\n        }\r\n        this.tempTextArea.value = content;\r\n        /** @type {?} */\r\n        const toReturn = this.copyFromInputElement(this.tempTextArea);\r\n        if (this.config.cleanUpAfterCopy) {\r\n            this.destroy(this.tempTextArea.parentElement);\r\n        }\r\n        return toReturn;\r\n    }\r\n    // remove temporary textarea if any\r\n    /**\r\n     * @param {?=} container\r\n     * @return {?}\r\n     */\r\n    destroy(container = this.document.body) {\r\n        if (this.tempTextArea) {\r\n            container.removeChild(this.tempTextArea);\r\n            // removeChild doesn't remove the reference from memory\r\n            this.tempTextArea = undefined;\r\n        }\r\n    }\r\n    // select the target html input element\r\n    /**\r\n     * @private\r\n     * @param {?} inputElement\r\n     * @return {?}\r\n     */\r\n    selectTarget(inputElement) {\r\n        inputElement.select();\r\n        inputElement.setSelectionRange(0, inputElement.value.length);\r\n        return inputElement.value.length;\r\n    }\r\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\r\n    copyText() {\r\n        return this.document.execCommand('copy');\r\n    }\r\n    // Moves focus away from `target` and back to the trigger, removes current selection.\r\n    /**\r\n     * @private\r\n     * @param {?} inputElement\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    clearSelection(inputElement, window) {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        inputElement && inputElement.focus();\r\n        window.getSelection().removeAllRanges();\r\n    }\r\n    // create a fake textarea for copy command\r\n    /**\r\n     * @private\r\n     * @param {?} doc\r\n     * @param {?} window\r\n     * @return {?}\r\n     */\r\n    createTempTextArea(doc, window) {\r\n        /** @type {?} */\r\n        const isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\r\n        /** @type {?} */\r\n        let ta;\r\n        ta = doc.createElement('textarea');\r\n        // Prevent zooming on iOS\r\n        ta.style.fontSize = '12pt';\r\n        // Reset box model\r\n        ta.style.border = '0';\r\n        ta.style.padding = '0';\r\n        ta.style.margin = '0';\r\n        // Move element out of screen horizontally\r\n        ta.style.position = 'absolute';\r\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\r\n        // Move element to the same position vertically\r\n        /** @type {?} */\r\n        const yPosition = window.pageYOffset || doc.documentElement.scrollTop;\r\n        ta.style.top = yPosition + 'px';\r\n        ta.setAttribute('readonly', '');\r\n        return ta;\r\n    }\r\n    /**\r\n     * Pushes copy operation response to copySubject, to provide global access\r\n     * to the response.\r\n     * @param {?} response\r\n     * @return {?}\r\n     */\r\n    pushCopyReponse(response) {\r\n        this.copySubject.next(response);\r\n    }\r\n}\r\nClipboardService.decorators = [\r\n    { type: Injectable, args: [{ providedIn: 'root' },] }\r\n];\r\n/** @nocollapse */\r\nClipboardService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [WINDOW,] }] }\r\n];\r\n/** @nocollapse */ ClipboardService.ngInjectableDef = defineInjectable({ factory: function ClipboardService_Factory() { return new ClipboardService(inject(DOCUMENT), inject(WINDOW, 8)); }, token: ClipboardService, providedIn: \"root\" });\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass ClipboardDirective {\r\n    /**\r\n     * @param {?} clipboardSrv\r\n     */\r\n    constructor(clipboardSrv) {\r\n        this.clipboardSrv = clipboardSrv;\r\n        this.cbOnSuccess = new EventEmitter();\r\n        this.cbOnError = new EventEmitter();\r\n    }\r\n    // tslint:disable-next-line:no-empty\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() { }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnDestroy() {\r\n        this.clipboardSrv.destroy(this.container);\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    onClick(event) {\r\n        if (!this.clipboardSrv.isSupported) {\r\n            this.handleResult(false, undefined, event);\r\n        }\r\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\r\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value, event);\r\n        }\r\n        else if (this.cbContent) {\r\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent, this.container), this.cbContent, event);\r\n        }\r\n    }\r\n    /**\r\n     * Fires an event based on the copy operation result.\r\n     * @private\r\n     * @param {?} succeeded\r\n     * @param {?} copiedContent\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    handleResult(succeeded, copiedContent, event) {\r\n        /** @type {?} */\r\n        let response = {\r\n            isSuccess: succeeded,\r\n            event\r\n        };\r\n        if (succeeded) {\r\n            response = Object.assign(response, {\r\n                content: copiedContent,\r\n                successMessage: this.cbSuccessMsg\r\n            });\r\n            this.cbOnSuccess.emit(response);\r\n        }\r\n        else {\r\n            this.cbOnError.emit(response);\r\n        }\r\n        this.clipboardSrv.pushCopyReponse(response);\r\n    }\r\n}\r\nClipboardDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[ngxClipboard]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nClipboardDirective.ctorParameters = () => [\r\n    { type: ClipboardService }\r\n];\r\nClipboardDirective.propDecorators = {\r\n    targetElm: [{ type: Input, args: ['ngxClipboard',] }],\r\n    container: [{ type: Input }],\r\n    cbContent: [{ type: Input }],\r\n    cbSuccessMsg: [{ type: Input }],\r\n    cbOnSuccess: [{ type: Output }],\r\n    cbOnError: [{ type: Output }],\r\n    onClick: [{ type: HostListener, args: ['click', ['$event.target'],] }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass ClipboardIfSupportedDirective {\r\n    /**\r\n     * @param {?} _clipboardService\r\n     * @param {?} _viewContainerRef\r\n     * @param {?} _templateRef\r\n     */\r\n    constructor(_clipboardService, _viewContainerRef, _templateRef) {\r\n        this._clipboardService = _clipboardService;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._templateRef = _templateRef;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    ngOnInit() {\r\n        if (this._clipboardService.isSupported) {\r\n            this._viewContainerRef.createEmbeddedView(this._templateRef);\r\n        }\r\n    }\r\n}\r\nClipboardIfSupportedDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[ngxClipboardIfSupported]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nClipboardIfSupportedDirective.ctorParameters = () => [\r\n    { type: ClipboardService },\r\n    { type: ViewContainerRef },\r\n    { type: TemplateRef }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nclass ClipboardModule {\r\n}\r\nClipboardModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [CommonModule],\r\n                declarations: [ClipboardDirective, ClipboardIfSupportedDirective],\r\n                exports: [ClipboardDirective, ClipboardIfSupportedDirective]\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ClipboardService, ClipboardDirective, ClipboardModule, ClipboardIfSupportedDirective };\n\n//# sourceMappingURL=ngx-clipboard.js.map","import { InjectionToken } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/** @type {?} */\r\nconst WINDOW = new InjectionToken('WindowToken', typeof window !== 'undefined' && window.document ? { providedIn: 'root', factory: (/**\r\n     * @return {?}\r\n     */\r\n    () => window) } : undefined);\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { WINDOW };\n\n//# sourceMappingURL=ngx-window-token.js.map","module.exports = \"<kt-portlet [ngClass]=\\\"'kt-portlet--ngviewer'\\\" *ngIf=\\\"viewItem\\\">\\r\\n\\t<kt-portlet-header [title]=\\\"viewItem.beforeCodeTitle\\\">\\r\\n\\t\\t<ng-container ktPortletTools>\\r\\n\\t\\t\\t<!-- <ul class=\\\"kt-portlet__nav\\\">\\r\\n\\t\\t\\t\\t<li class=\\\"kt-portlet__nav-item\\\">\\r\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\" *ngIf=\\\"hasExampleSource()\\\" (click)=\\\"changeCodeVisibility()\\\" class=\\\"kt-portlet__nav-link kt-portlet__nav-link--icon\\\"\\r\\n\\t\\t\\t\\t\\t\\ttitle=\\\"View Source\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-code\\\"></i>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t</ul> -->\\r\\n\\t\\t\\t<div class=\\\"kt-portlet__head-group\\\">\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\"\\r\\n\\t\\t\\t\\t\\t*ngIf=\\\"hasExampleSource()\\\"\\r\\n\\t\\t\\t\\t\\t(click)=\\\"changeCodeVisibility()\\\"\\r\\n\\t\\t\\t\\t\\ttitle=\\\"View Source\\\"\\r\\n\\t\\t\\t\\t\\tclass=\\\"btn btn-clean btn-sm btn-icon btn-icon-md\\\">\\r\\n\\t\\t\\t\\t\\t<i class=\\\"la la-code\\\"></i>\\r\\n\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</ng-container>\\r\\n\\t</kt-portlet-header>\\r\\n\\r\\n\\t<kt-portlet-body>\\r\\n\\t\\t<div class=\\\"kt-portlet__preview\\\" *ngIf=\\\"viewItem.beforeCodeDescription\\\">\\r\\n\\t\\t\\t<div class=\\\"kt-alert kt-alert--icon kt-alert--air kt-alert--square alert alert-dismissible kt-margin-bottom-30\\\"\\r\\n\\t\\t\\t\\t[ngClass]=\\\"classes\\\" role=\\\"alert\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"kt-alert__text\\\" [innerHTML]=\\\"viewItem.beforeCodeDescription | safe: 'html'\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div *ngIf=\\\"hasExampleSource()\\\" class=\\\"kt-portlet__preview kt-portlet__code\\\" [ngClass]=\\\"{'kt-portlet__code--show' : viewItem.isCodeVisible}\\\">\\r\\n\\t\\t\\t<mat-tab-group *ngIf=\\\"viewItem.isCodeVisible\\\">\\r\\n\\t\\t\\t\\t<mat-tab label=\\\"HTML\\\" *ngIf=\\\"viewItem.htmlCode\\\">\\r\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\r\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\r\\n\\t\\t\\t\\t\\t\\tngxClipboard\\r\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.htmlCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.htmlCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t<mat-tab label=\\\"TS\\\" *ngIf=\\\"viewItem.tsCode\\\">\\r\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\r\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\r\\n\\t\\t\\t\\t\\t\\tngxClipboard\\r\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.tsCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.tsCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t<mat-tab label=\\\"CSS\\\" *ngIf=\\\"viewItem.cssCode\\\">\\r\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\r\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\r\\n\\t\\t\\t\\t\\t\\tngxClipboard\\r\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.cssCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.cssCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t\\t<mat-tab label=\\\"SCSS\\\" *ngIf=\\\"viewItem.scssCode\\\">\\r\\n\\t\\t\\t\\t\\t<a href=\\\"javascript:;\\\"\\r\\n\\t\\t\\t\\t\\t\\tclass=\\\"kt-portlet__code-copy\\\"\\r\\n\\t\\t\\t\\t\\t\\ttitle=\\\"Copy example source\\\"\\r\\n\\t\\t\\t\\t\\t\\tngxClipboard\\r\\n\\t\\t\\t\\t\\t\\t[cbContent]=\\\"viewItem.scssCode\\\">\\r\\n\\t\\t\\t\\t\\t\\t<i class=\\\"la la-copy\\\"></i>\\r\\n\\t\\t\\t\\t\\t</a>\\r\\n\\t\\t\\t\\t\\t<pre><code [highlight]=\\\"viewItem.scssCode\\\"></code></pre>\\r\\n\\t\\t\\t\\t</mat-tab>\\r\\n\\t\\t\\t</mat-tab-group>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- view -->\\r\\n\\t\\t<div class=\\\"kt-portlet__preview\\\">\\r\\n\\t\\t\\t<ng-content></ng-content>\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- / view -->\\r\\n\\r\\n\\t\\t<!-- after Code Title -->\\r\\n\\t\\t<div *ngIf=\\\"viewItem.afterCodeTitle\\\" class=\\\"kt-portlet__preview\\\" [innerHTML]=\\\"viewItem.afterCodeTitle | safe: 'html'\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- / after Code Title -->\\r\\n\\r\\n\\t\\t<!-- after Code Description -->\\r\\n\\t\\t<div *ngIf=\\\"viewItem.afterCodeDescription\\\" class=\\\"kt-portlet__preview\\\" [innerHTML]=\\\"viewItem.afterCodeDescription | safe: 'html'\\\">\\r\\n\\t\\t</div>\\r\\n\\t\\t<!-- / after Code Description -->\\r\\n\\t</kt-portlet-body>\\r\\n\\r\\n\\t<kt-portlet-footer></kt-portlet-footer>\\r\\n</kt-portlet>\\r\\n\"","module.exports = \":host .kt-portlet.kt-portlet--ngviewer .kt-portlet__body {\\n  padding: 1.75rem 1.75rem;\\n}\\n:host .kt-portlet.kt-portlet--ngviewer .kt-portlet__body .kt-portlet__code.kt-portlet__code--show {\\n  margin-bottom: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tZXRyb25pYy92aWV3cy9wYXJ0aWFscy9jb250ZW50L2dlbmVyYWwvbWF0ZXJpYWwtcHJldmlldy9EOlxcY3VycmVudFxcbWVyY2hhbnQgcG9ydHJhbFxcbmV3LXZlcnNpb25cXDJcXHhscy1tZXJjaGFudC1lbmdhZ2VtZW50LXBvcnRhbC9zcmNcXG1ldHJvbmljXFx2aWV3c1xccGFydGlhbHNcXGNvbnRlbnRcXGdlbmVyYWxcXG1hdGVyaWFsLXByZXZpZXdcXG1hdGVyaWFsLXByZXZpZXcuY29tcG9uZW50LnNjc3MiLCJzcmMvbWV0cm9uaWMvdmlld3MvcGFydGlhbHMvY29udGVudC9nZW5lcmFsL21hdGVyaWFsLXByZXZpZXcvbWF0ZXJpYWwtcHJldmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQztFQUNPLHdCQUFBO0FDQVI7QURHSTtFQUNLLG1CQUFBO0FDRFQiLCJmaWxlIjoic3JjL21ldHJvbmljL3ZpZXdzL3BhcnRpYWxzL2NvbnRlbnQvZ2VuZXJhbC9tYXRlcmlhbC1wcmV2aWV3L21hdGVyaWFsLXByZXZpZXcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcblx0Lmt0LXBvcnRsZXQua3QtcG9ydGxldC0tbmd2aWV3ZXIgLmt0LXBvcnRsZXRfX2JvZHkge1xyXG4gICAgICAgIHBhZGRpbmc6IDEuNzVyZW0gMS43NXJlbTtcclxuICAgIH1cclxuXHJcbiAgICAua3QtcG9ydGxldC5rdC1wb3J0bGV0LS1uZ3ZpZXdlciAua3QtcG9ydGxldF9fYm9keSAua3QtcG9ydGxldF9fY29kZS5rdC1wb3J0bGV0X19jb2RlLS1zaG93IHtcclxuICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgIH1cclxufVxyXG4iLCI6aG9zdCAua3QtcG9ydGxldC5rdC1wb3J0bGV0LS1uZ3ZpZXdlciAua3QtcG9ydGxldF9fYm9keSB7XG4gIHBhZGRpbmc6IDEuNzVyZW0gMS43NXJlbTtcbn1cbjpob3N0IC5rdC1wb3J0bGV0Lmt0LXBvcnRsZXQtLW5ndmlld2VyIC5rdC1wb3J0bGV0X19ib2R5IC5rdC1wb3J0bGV0X19jb2RlLmt0LXBvcnRsZXRfX2NvZGUtLXNob3cge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufSJdfQ== */\"","// Angular\r\nimport { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'kt-material-preview',\r\n\ttemplateUrl: './material-preview.component.html',\r\n\tstyleUrls: ['./material-preview.component.scss'],\r\n})\r\nexport class MaterialPreviewComponent implements OnInit {\r\n\t// Public properties\r\n\t@Input() viewItem: any;\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle visibility\r\n\t */\r\n\tchangeCodeVisibility(): void {\r\n\t\tthis.viewItem.isCodeVisible = !this.viewItem.isCodeVisible;\r\n\t}\r\n\r\n\t/**\r\n\t * Check examples existing\r\n\t */\r\n\thasExampleSource(): boolean {\r\n\t\tif (!this.viewItem) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!this.viewItem.cssCode && !this.viewItem.htmlCode && !this.viewItem.scssCode && !this.viewItem.tsCode) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n}\r\n","// Angular\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\n// Perfect ScrollBar\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { MaterialPreviewComponent } from './material-preview.component';\r\n// Core Module\r\nimport { CoreModule } from '../../../../../core/core.module';\r\nimport { PortletModule } from '../portlet/portlet.module';\r\n// Highlight JS\r\nimport { HighlightModule } from 'ngx-highlightjs';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tCoreModule,\r\n\t\tHighlightModule,\r\n\t\tPerfectScrollbarModule,\r\n\t\tPortletModule,\r\n\t\tClipboardModule,\r\n\r\n\t\t// angular material modules\r\n\t\tMatTabsModule,\r\n\t\tMatExpansionModule,\r\n\t\tMatCardModule,\r\n\t\tMatIconModule,\r\n\t],\r\n\texports: [MaterialPreviewComponent],\r\n\tdeclarations: [MaterialPreviewComponent]\r\n})\r\nexport class MaterialPreviewModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}